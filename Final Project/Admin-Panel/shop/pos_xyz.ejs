<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Product Table</title>
    <style>
        table {
            border-collapse: collapse;
            width: 70%;
            float: left;
        }
        th, td {
            border: 1px solid black;
            padding: 8px;
            text-align: center;
        }
        th {
            background-color: #f2f2f2;
        }
        .totals-row th, .totals-row td {
            background-color: #f9f9f9;
            font-weight: bold;
        }
        .summary-box {
            width: 20%;
            height: 100%;
            padding: 20px;
            border: 1px solid black;
            float: right;
            box-sizing: border-box;
        }
        .summary-box div {
            margin-bottom: 10px;
        }
        .submit-button {
            clear: both;
            margin-top: 20px;
        }
    </style>
</head>
<body>

<h2>Product Table</h2>

<form id="search-form">
    <label for="product_code">Product Code:</label>
    <input type="text" id="product_code" name="product_code">
    
    <label for="product_name">Product Name:</label>
    <input type="text" id="product_name" name="product_name">
    
    <label for="product_weight">Product Weight:</label>
    <input type="text" id="product_weight" name="product_weight">
    
    <label for="product_type">Product Type:</label>
    <input type="text" id="product_type" name="product_type">
    
    <label for="company_name">Company Name:</label>
    <input type="text" id="company_name" name="company_name">
    
    <button type="submit">Search</button>
</form>

<table id="product-table">
    <thead>
        <tr>
            <th>Product Code</th>
            <th>Product Name</th>
            <th>Weight</th>
            <th>Ingredient</th>
            <th>Product Type</th>
            <th>Company</th>
            <th>Stock</th>
            <th>Quantity</th>
            <th>Price</th>
        </tr>
    </thead>
    <tbody>
        <!-- Dynamic rows will be appended here -->
    </tbody>
    <tfoot>
        <tr class="totals-row">
            <td colspan="7">Total</td>
            <td id="total-quantity">0</td>
            <td id="total-price">$0.00</td>
           
        </tr>
    </tfoot>
</table>

<div class="summary-box">
    <div>Update Totals: <span id="summary-total-price">$0.00</span></div>
    <div>
        Discount (%): <input type="number" id="discount-input" value="0" min="0" max="100">
    </div>
    <div>After Discount Price: <span id="after-discount-price">$0.00</span></div>
    <div>
        Receive Price: <input type="number" id="receive-price-input" value="0">
    </div>
    <div>Return Price: <span id="return-price">$0.00</span></div>
</div>

<div class="submit-button">
    <button id="submit-button" type="button">Submit</button>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function() {
        const totalQuantityCell = document.getElementById('total-quantity');
        const totalPriceCell = document.getElementById('total-price');
        const summaryTotalPrice = document.getElementById('summary-total-price');
        const discountInput = document.getElementById('discount-input');
        const afterDiscountPrice = document.getElementById('after-discount-price');
        const receivePriceInput = document.getElementById('receive-price-input');
        const returnPrice = document.getElementById('return-price');
        const productTableBody = document.getElementById('product-table').querySelector('tbody');

        function updateTotals() {
            let totalQuantity = 0;
            let totalPrice = 0;
            document.querySelectorAll('.quantity-input').forEach(function(input) {
                let quantity = parseInt(input.value);
                if (isNaN(quantity) || quantity < 0) {
                    quantity = 0;
                    input.value = quantity;
                }
                const priceCell = input.parentNode.nextElementSibling;
                const unitPrice = parseFloat(priceCell.getAttribute('data-price'));
                const price = quantity * unitPrice;
                priceCell.textContent = '$' + price.toFixed(2);

                totalQuantity += quantity;
                totalPrice += price;
            });

            totalQuantityCell.textContent = totalQuantity;
            totalPriceCell.textContent = '$' + totalPrice.toFixed(2);
            summaryTotalPrice.textContent = '$' + totalPrice.toFixed(2);
            updateDiscountAndReturn();
        }

        function updateDiscountAndReturn() {
            const totalPrice = parseFloat(summaryTotalPrice.textContent.replace('$', ''));
            const discount = parseFloat(discountInput.value) || 0;
            const discountedPrice = totalPrice - (totalPrice * discount / 100);
            afterDiscountPrice.textContent = '$' + discountedPrice.toFixed(2);

            const receivedPrice = parseFloat(receivePriceInput.value) || 0;
            const returnAmount = receivedPrice - discountedPrice;
            returnPrice.textContent = '$' + returnAmount.toFixed(2);
        }

        function rowExists(product) {
            let exists = false;
            document.querySelectorAll('#product-table tbody tr').forEach(function(row) {
                if (row.cells[0].textContent === product.product_code) {
                    exists = true;
                }
            });
            return exists;
        }

        function addProductRow(product) {
            const row = document.createElement('tr');
            row.innerHTML = `
                <td>${product.product_code}</td>
                <td>${product.product_name}</td>
                <td>${product.product_weight}</td>
                <td>${product.ingredient_name}</td>
                <td>${product.product_type}</td>
                <td>${product.company_name}</td>
                <td>${product.shop_stock}</td>
                <td><input type="number" class="quantity-input" value="1"></td>
                <td data-price="${product.price}">$${product.price.toFixed(2)}</td>
                
            `;
            productTableBody.appendChild(row);
            row.querySelector('.quantity-input').addEventListener('change', updateTotals);
        }

        document.getElementById('search-form').addEventListener('submit', function(event) {
            event.preventDefault();
            const formData = new FormData(this);
            const searchParams = new URLSearchParams(formData).toString();
            fetch('/sales-prodct-search?' + searchParams)
                .then(response => response.json())
                .then(data => {
                    data.forEach(product => {
                        if (!rowExists(product)) {
                            addProductRow(product);
                        }
                    });
                    updateTotals();
                });
        });

        // Attach event listeners to discount and receive price inputs
        discountInput.addEventListener('input', updateDiscountAndReturn);
        receivePriceInput.addEventListener('input', updateDiscountAndReturn);

        // Handle form submission to convert table data to JSON and send to the server
        document.getElementById('submit-button').addEventListener('click', function() {
        const products = [];
        document.querySelectorAll('#product-table tbody tr').forEach(function(row) {
            const product = {
                product_code: row.cells[0].textContent,
                product_name: row.cells[1].textContent,
                product_weight: row.cells[2].textContent,
                ingredient_name: row.cells[3].textContent,
                product_type: row.cells[4].textContent,
                company_name: row.cells[5].textContent,
                shop_stock: row.cells[6].textContent,
                quantity: row.cells[7].querySelector('.quantity-input').value,
                price: row.cells[8].getAttribute('data-price')
            };
            products.push(product);
        });

        const totalQuantity = document.getElementById('total-quantity').textContent;
        const totalPrice = document.getElementById('total-price').textContent;
        const discount = document.getElementById('discount-input').value;
        const afterDiscountPriceValue = document.getElementById('after-discount-price').textContent;
        const receivePrice = document.getElementById('receive-price-input').value;
        const returnPriceValue = document.getElementById('return-price').textContent;

        const now = new Date();
        const currentTime = now.toLocaleDateString() + ' ' + now.toLocaleTimeString();

        const jsonData = {
            products: products,
            total_quantity: totalQuantity,
            total_price: totalPrice,
            discount: discount,
            after_discount_price: afterDiscountPriceValue,
            receive_price: receivePrice,
            return_price: returnPriceValue,
            current_time: currentTime
        };

        // Send JSON data to Express.js server
        fetch('/submit-sales-data', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(jsonData)
        }).then(response => {
            if (response.ok) {
                console.log('Sales data submitted successfully');
                window.location.href = '/'; // Redirect to home_page
            } else {
                console.error('Failed to submit sales data');
            }
        }).catch(error => {
            console.error('Error:', error);
        });
    });

        // Initial totals calculation
        updateTotals();
    });
</script>

</body>
</html>
