<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Product Table</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background: linear-gradient(135deg, #cfd9df 0%, #e2ebf0 100%);
            margin: 0;
            padding: 20px;
        }


        /* Form styling */
        #search-form {
            margin-bottom: 20px;
            background-color: #cfd9df;
            padding: 15px;
            border: 1px solid #b1a9a9;
            border-radius: 5px;
            box-shadow: 10px 10px 15px rgba(0, 0, 0, 0.1);
            display: flex;
        }



        #search-form input[type="text"],
        #search-form input[type="number"] {
            width: calc(20% - 10px);
            background-color: #e7edf0;
            padding: 8px;
            margin-right: 10px;
            margin-bottom: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
            box-sizing: border-box;
            font-size: 14px;
        }

        #search-form button {
            background-color: #007bff;
            color: white;
            border: none;
            padding: 7px 30px;
            border-radius: 4px;
            cursor: pointer;
            font-size: 16px;
            font-weight: bold;
        }

        #search-form button:hover {
            background-color: #0056b3;
        }

        /* Table styling */
        table {

            width: 100%;
            height: auto;
        }

        th,
        td {
            border: 1px solid black;
            padding: 8px;
            text-align: center;
            font-weight: bold;
        }

        th {
            background-color: #f2f2f2;
            color: #333;
        }

        .totals-row th,
        .totals-row td {
            background-color: #f9f9f9;
            font-weight: bold;
        }

        /* Summary box styling */
        .summary-box {
            width: 20%;
            padding: 20px;
            border: 1px solid black;
            box-sizing: border-box;
            background-color: #fff;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        .summary-box div {
            margin-bottom: 10px;
            color: #555;
        }

        .summary-box input[type="number"] {
            width: 100px;
            padding: 5px;
            border: 1px solid #ccc;
            border-radius: 4px;
            box-sizing: border-box;
            font-size: 14px;
        }

        /* Submit button styling */
        .submit-button {

            text-align: right;
            margin: 1em 16.8em 0 0;
        }

        #submit-button {
            background-color: #28a745;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 4px;
            cursor: pointer;
            font-size: 14px;
        }

        #submit-button:hover {
            background-color: #218838;
        }

        .table-area {
            width: 100%;
            display: flex;

        }

        .table-area2 {
            width: 80%;
            margin-right: 5px;


        }

        .nav1 {


            width: 100%;

            margin: 20px 0px;
            display: flex;
            justify-content: center;
            align-items: center;
            justify-content: space-around;
            text-decoration: none;
            font-weight: bold;
        }


        .nav-left a {
            color: rgb(78, 67, 67);
            text-decoration: none;
            font-size: 18px;
        }

        .nav-left a:hover {
            background: linear-gradient(135deg, #b1c9d3 0%, #c2d9ee 100%);

            transform: scale(1.05);
            color: black;
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
        }
    </style>
</head>

<body>
    <div class="nav1">
        <div class="nav-left"><a href="/shop-pos-panel">Home</a></div>
        <div class="nav-left"><a href="/pos_xyz">POS</a></div>
        <div class="nav-left"><a href="/xyz1_shop_invoice">Stock In</a></div>
        <div class="nav-left"><a href="/shop_all_history">History</a></div>
        <div class="nav-left"><a href="/shop-online-order">Market</a></div>
        <div class="nav-left"><a href="/email-panel">Mail</a></div>
        <div class="nav-left"><a href="/login_shop">LogOut</a></div>
    </div>


    <form id="search-form">

        <input type="text" id="product_id" name="product_id" placeholder="Product Code">


        <input type="text" id="product_name" name="product_name" placeholder="Product Name">


        <input type="text" id="product_weight" name="product_weight" placeholder="Product Weight">


        <input type="text" id="product_type" name="product_type" placeholder="Product Type">


        <input type="text" id="company_name" name="company_name" placeholder="Company Name">

        <button type="submit">Search</button>
    </form>
    <div class="table-area">
        <div class="table-area2">
            <table id="product-table">
                <thead>
                    <tr>
                        <th>Product Code</th>
                        <th>Product Name</th>
                        <th>Weight</th>
                        <th>Ingredient</th>
                        <th>Product Type</th>
                        <th>Company</th>
                        <th>Stock</th>
                        <th>Quantity</th>
                        <th>Price</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Dynamic rows will be appended here -->
                </tbody>
                <tfoot>
                    <tr class="totals-row">
                        <td colspan="7">Total</td>
                        <td id="total-quantity">0</td>
                        <td id="total-price">$0.00</td>
                    </tr>
                </tfoot>
            </table>

        </div>



        <div class="summary-box">
            <div>Update Totals: <span id="summary-total-price">$0.00</span></div>
            <div>
                Discount (%): <input type="number" id="discount-input" value="0" min="0" max="100">
            </div>
            <div>After Discount Price: <span id="after-discount-price">$0.00</span></div>
            <div>
                Receive Price: <input type="number" id="receive-price-input" value="0">
            </div>
            <div>Return Price: <span id="return-price">$0.00</span></div>
        </div>


    </div>



    <div class="submit-button">
        <button id="submit-button" type="button">Submit</button>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const totalQuantityCell = document.getElementById('total-quantity');
            const totalPriceCell = document.getElementById('total-price');
            const summaryTotalPrice = document.getElementById('summary-total-price');
            const discountInput = document.getElementById('discount-input');
            const afterDiscountPrice = document.getElementById('after-discount-price');
            const receivePriceInput = document.getElementById('receive-price-input');
            const returnPrice = document.getElementById('return-price');
            const productTableBody = document.getElementById('product-table').querySelector('tbody');

            function updateTotals() {
                let totalQuantity = 0;
                let totalPrice = 0;
                document.querySelectorAll('.quantity-input').forEach(function (input) {
                    let quantity = parseInt(input.value);
                    if (isNaN(quantity) || quantity < 0) {
                        quantity = 0;
                        input.value = quantity;
                    }
                    const priceCell = input.parentNode.nextElementSibling;
                    const unitPrice = parseFloat(priceCell.getAttribute('data-price'));
                    const price = quantity * unitPrice;
                    priceCell.textContent = '$' + price.toFixed(2);

                    totalQuantity += quantity;
                    totalPrice += price;
                });

                totalQuantityCell.textContent = totalQuantity;
                totalPriceCell.textContent = '$' + totalPrice.toFixed(2);
                summaryTotalPrice.textContent = '$' + totalPrice.toFixed(2);
                updateDiscountAndReturn();
            }

            function updateDiscountAndReturn() {
                const totalPrice = parseFloat(summaryTotalPrice.textContent.replace('$', ''));
                const discount = parseFloat(discountInput.value) || 0;
                const discountedPrice = totalPrice - (totalPrice * discount / 100);
                afterDiscountPrice.textContent = '$' + discountedPrice.toFixed(2);

                const receivedPrice = parseFloat(receivePriceInput.value) || 0;
                const returnAmount = receivedPrice - discountedPrice;
                returnPrice.textContent = '$' + returnAmount.toFixed(2);
            }

            function rowExists(product) {
                let exists = false;
                document.querySelectorAll('#product-table tbody tr').forEach(function (row) {
                    if (row.cells[0].textContent === product.product_id) {
                        exists = true;
                    }
                });
                return exists;
            }

            function addProductRow(product) {
                const row = document.createElement('tr');
                row.innerHTML = `
                <td>${product.product_id}</td>
                <td>${product.product_name}</td>
                <td>${product.product_weight}</td>
                <td>${product.ingredient_name}</td>
                <td>${product.product_type}</td>
                <td>${product.company_name}</td>
                <td>${product.shop_stock}</td>
                <td><input type="number" class="quantity-input" value="1"></td>
                <td data-price="${product.price}">$${product.price.toFixed(2)}</td>
            `;
                productTableBody.appendChild(row);
                row.querySelector('.quantity-input').addEventListener('change', updateTotals);
            }

            document.getElementById('search-form').addEventListener('submit', function (event) {
                event.preventDefault();
                const formData = new FormData(this);
                const searchParams = new URLSearchParams(formData).toString();
                fetch('/sales-prodct-search?' + searchParams)
                    .then(response => response.json())
                    .then(data => {
                        data.forEach(product => {
                            if (!rowExists(product)) {
                                addProductRow(product);
                            }
                        });
                        updateTotals();
                    });
            });

            discountInput.addEventListener('input', updateDiscountAndReturn);
            receivePriceInput.addEventListener('input', updateDiscountAndReturn);

            document.getElementById('submit-button').addEventListener('click', function () {
                const products = [];
                document.querySelectorAll('#product-table tbody tr').forEach(function (row) {
                    const product = {
                        product_id: row.cells[0].textContent,
                        product_name: row.cells[1].textContent,
                        product_weight: row.cells[2].textContent,
                        ingredient_name: row.cells[3].textContent,
                        product_type: row.cells[4].textContent,
                        company_name: row.cells[5].textContent,
                        shop_stock: row.cells[6].textContent,
                        quantity: row.cells[7].querySelector('.quantity-input').value,
                        price: row.cells[8].getAttribute('data-price')
                    };
                    products.push(product);
                });

                const totalQuantity = document.getElementById('total-quantity').textContent;
                const totalPrice = document.getElementById('total-price').textContent;
                const discount = document.getElementById('discount-input').value;
                const afterDiscountPriceValue = document.getElementById('after-discount-price').textContent;
                const receivePrice = document.getElementById('receive-price-input').value;
                const returnPriceValue = document.getElementById('return-price').textContent;

                const now = new Date();
                const sales_time = now.toLocaleDateString() + ' ' + now.toLocaleTimeString();

                const jsonData = {
                    products: products,
                    total_quantity: totalQuantity,
                    total_price: totalPrice,
                    discount: discount,
                    after_discount_price: afterDiscountPriceValue,
                    receive_price: receivePrice,
                    return_price: returnPriceValue,
                    sales_time: sales_time
                };

                fetch('/submit-sales-data', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(jsonData)
                }).then(response => {
                    if (response.ok) {
                        console.log('Sales data submitted successfully');
                        window.location.href = '/pos_xyz';
                    } else {
                        console.error('Failed to submit sales data');
                    }
                }).catch(error => {
                    console.error('Error submitting sales data:', error);
                });
            });
        });
    </script>

</body>

</html>